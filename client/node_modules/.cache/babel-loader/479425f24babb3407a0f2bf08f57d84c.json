{"ast":null,"code":"var _jsxFileName = \"/Users/bestbrobradley/Desktop/code/homework/final-homework/client/src/App.js\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { SearchContext } from './utils/SearchContext';\nimport { BookshelfContext } from './utils/BookshelfContext';\nimport API from './utils/API';\nimport { Navbar } from \"./components/Navbar\";\nimport { Search } from \"./pages/Search\";\nimport { Bookshelf } from \"./pages/Bookshelf\";\nimport { Finished } from \"./pages/Finished\";\n\nfunction App() {\n  const [search, updateSearch] = useState({\n    term: \"\",\n    type: \"Title\",\n    results: []\n  });\n  const [library, updateLibrary] = useState({\n    books: []\n  });\n\n  const addToLibrary = data => {\n    API.addBook(data).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const loadBooks = () => {\n    API.getUserBooks().then(res => {\n      updateLibrary(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const removeFromLibrary = () => undefined;\n\n  const markAsRead = id => {\n    API.updateBook(id).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const handleInputChange = event => {\n    const {\n      value\n    } = event.target;\n    updateSearch({ ...search,\n      term: value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    googleSearch(search);\n  };\n\n  const handleSelectorChange = event => {\n    const type = event.target.textContent;\n    updateSearch({ ...search,\n      type: type\n    });\n  };\n\n  const googleSearch = query => {\n    API.search(query).then(res => {\n      console.log(res);\n      const results = res.data.items.map(item => [{\n        id: item.id,\n        title: item.volumeInfo.title,\n        authors: item.volumeInfo.authors,\n        pages: item.volumeInfo.pageCount,\n        // image: item.volumeInfo.imageLinks.smallThumbnail,\n        summary: item.volumeInfo.description,\n        categories: item.volumeInfo.categories\n      }]);\n      console.log(results);\n      updateSearch({ ...search,\n        results: results\n      });\n    }).catch(err => console.log(err));\n  };\n\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(SearchContext.Provider, {\n    value: {\n      search,\n      handleInputChange,\n      handleSubmit,\n      handleSelectorChange,\n      googleSearch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/bookshelf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Bookshelf, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(Route, {\n    exact: true,\n    path: \"/read\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Finished, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Route, {\n    exact: true,\n    path: \"/search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Search, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bestbrobradley/Desktop/code/homework/final-homework/client/src/App.js"],"names":["React","useState","BrowserRouter","Router","Switch","Route","SearchContext","BookshelfContext","API","Navbar","Search","Bookshelf","Finished","App","search","updateSearch","term","type","results","library","updateLibrary","books","addToLibrary","data","addBook","then","res","console","log","catch","err","loadBooks","getUserBooks","removeFromLibrary","undefined","markAsRead","id","updateBook","handleInputChange","event","value","target","handleSubmit","preventDefault","googleSearch","handleSelectorChange","textContent","query","items","map","item","title","volumeInfo","authors","pages","pageCount","summary","description","categories"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport { SearchContext } from './utils/SearchContext'\nimport { BookshelfContext } from './utils/BookshelfContext'\nimport API from './utils/API'\nimport { Navbar } from \"./components/Navbar\"\nimport { Search } from \"./pages/Search\"\nimport { Bookshelf } from \"./pages/Bookshelf\"\nimport { Finished } from \"./pages/Finished\"\n\nfunction App() {\n  const [search, updateSearch] = useState({\n    term: \"\",\n    type: \"Title\",\n    results: []\n  })\n\n  const [library, updateLibrary] = useState({\n    books: []\n  })\n\n  const addToLibrary = (data) => {\n    API.addBook(data)\n    .then(res => {\n      console.log(res)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  const loadBooks = () => {\n    API.getUserBooks()\n    .then(res => {\n      updateLibrary(res.data)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  const removeFromLibrary = () => undefined\n\n  const markAsRead = (id) => {\n    API.updateBook(id)\n    .then(res => {\n      console.log(res)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n  }\n\n  const handleInputChange = ((event) => {\n    const { value } = event.target\n    updateSearch({ ...search, term: value })\n  })\n\n  const handleSubmit = (event => {\n    event.preventDefault()\n    googleSearch(search)\n  })\n\n  const handleSelectorChange = (event => {\n    const type = event.target.textContent\n    updateSearch({ ...search, type: type })\n  })\n\n  const googleSearch = (query => {\n    API.search(query)\n      .then(res => {\n        console.log(res)\n        const results = res.data.items.map(item => [{\n          id: item.id,\n          title: item.volumeInfo.title,\n          authors: item.volumeInfo.authors,\n          pages: item.volumeInfo.pageCount,\n          // image: item.volumeInfo.imageLinks.smallThumbnail,\n          summary: item.volumeInfo.description,\n          categories: item.volumeInfo.categories\n        }])\n        console.log(results)\n        updateSearch({ ...search, results: results })\n      })\n      .catch(err => console.log(err))\n  })\n\n  return (\n    <Router>\n      <Navbar />\n      <SearchContext.Provider value={{search, handleInputChange, handleSubmit, handleSelectorChange, googleSearch} }>\n        <Switch>\n          <Route exact path=\"/bookshelf\">\n            <Bookshelf />\n          </Route>\n          <Route exact path=\"/read\">\n            <Finished />\n          </Route>\n          <Route exact path=\"/search\">\n            <Search />\n          </Route>\n        </Switch>\n      </SearchContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}